?@references
?references
library(devtools)
find_rtools()
library(devtools)
find_rtools()
install.packages(installr)
install.packages("installr")
install.packages("roxygen2")
library(roxygen2)
library(devtools)
install.packages("roxygen2")
library(roxygen2)
library("roxygen2", lib.loc="~/R/R-3.5.0/library")
detach("package:roxygen2", unload=TRUE)
install.packages("devtools")
install.packages("roxygen2")
library("roxygen2", lib.loc="~/R/win-library/3.5")
detach("package:roxygen2", unload=TRUE)
library("roxygen2", lib.loc="~/R/win-library/3.5")
my.df <- data.frame(c("a","b","c","d"),
c(1,"None","None","None"),
c("None",1,"None","None"),
c(1,"None","None",1),
c(1,"None",1,"None"),
c("None",1,"None",1),
c(1,"None","None","None"))
View(my.df)
colnames(my.df) <- c("ID","Year1","Year2","Year3","Year4","Year5","Year6")
View(my.df)
fire_return <- function(x){
# set initial parameters
fire_ret_mean <- matrix(nrow = nrow(x))
t=1
# parent loop for each location where data is collected
for (t in 1:nrow(x)){
site.list <- c()
i=2
list = 0
# child loop for each year or column of severity values
for (i in 2:ncol(x)){
if (x[t,i] == "None"){
if (i == ncol(x)){
list <- list + 1
site.list <- rbind(site.list, list)
}else{list <- list + 1}
}else{
site.list <- rbind(site.list, list)
list <- 0
}
}
mean.tmp <- mean(site.list)
fire_ret_mean[t] <- mean.tmp
}
# Merge fire data with calculated average fire return values for easy tidyverse useage stuff
data.new <- cbind(x,fire_ret_mean)
}
fire_return(my.df)
View(fire_return)
test <- fire_return(my.df)
View(test)
library(arcticfiR)
?arcticfiR
?`arcticfiR-package`
?fire_return
colnames(my.df)[1]
?deparse
fire_return_table <- function(x){
tst.fire.ID <- sapply(x[,1],is.factor)
if (FALSE %in% tst.fire.ID){
warning(paste("Coloumn number 1, named:", colnames(x)[1], "should be a factor", sep = " "))
return(FALSE)
}
return(TRUE)
}
fire_return_table(my.df)
is.fire_return <- function(x){
tst.fire.ID <- sapply(x[,1],is.factor)
if (FALSE %in% tst.fire.ID){
warning(paste("Coloumn number 1, named:", colnames(x)[1], "should be a factor", sep = " "))
return(FALSE)
}
tst.fire.years <- sapply(x[,2:ncol(x)],is.factor)
if (FALSE %in% tst.fire.ID){
warning(paste("Coloumns for each year should be a factor", sep = ""))
return(FALSE)
}
return(TRUE)
}
is.fire_return(my.df)
my.df[,2] <- as.numeric(my.df[,2])
is.fire_return(my.df)
is.fire_return <- function(x){
tst.fire.ID <- sapply(x[,1],is.factor)
if (FALSE %in% tst.fire.ID){
warning(paste("Coloumn number 1, named:", colnames(x)[1], "should be a factor", sep = " "))
return(FALSE)
}
tst.fire.years <- sapply(x[,2:ncol(x)],is.factor)
if (FALSE %in% tst.fire.years){
warning(paste("Coloumns for each year should be a factor", sep = ""))
return(FALSE)
}
return(TRUE)
}
is.fire_return(my.df)
library(arcticfiR)
library(arcticfiR)
library(arcticfiR)
